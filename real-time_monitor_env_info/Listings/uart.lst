C51 COMPILER V9.00   UART                                                                  05/21/2017 16:01:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart\uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE PRINT(.\Lis
                    -tings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include"uart.h"
   2          
   3          bit busy;
   4          BYTE RxData;
   5          
   6          /*----------------------------
   7          UART interrupt service routine
   8          ----------------------------*/
   9          void Uart_Isr() interrupt 4 using 1
  10          {
  11   1          if (RI)
  12   1          {
  13   2              RI = 0;             //Clear receive interrupt flag
  14   2              RxData = SBUF;          //P0 show UART data
  15   2          //SendData(RxData);       //监测接收到的数据
  16   2          }
  17   1          if (TI)
  18   1          {
  19   2              TI = 0;             //Clear transmit interrupt flag
  20   2              busy = 0;           //Clear transmit busy flag
  21   2          }
  22   1      }
  23          /*----------------------------
  24          Init UART
  25          ----------------------------*/
  26          void InitUart()
  27          {
  28   1        SCON = 0x50;            //8-bit variable UART,控制寄存器：01工作方式，1允许多机，1允许接受，1发送第九位，
             -1接收第九位，发送/接收中断
  29   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  30   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set auto-reload vaule
  31   1          TR1 = 1;                //Timer1 start run
  32   1          ES = 1;                 //Enable UART interrupt
  33   1          EA = 1;                 //Open master interrupt switch
  34   1      }
  35          
  36          /*----------------------------
  37          Send a byte data to UART
  38          Input: dat (data to be sent)
  39          Output:None
  40          ----------------------------*/
  41          void SendData(BYTE dat)
  42          {
  43   1          while (busy);           //Wait for the completion of the previous data is sent
  44   1      
  45   1          busy = 1;
  46   1          SBUF = dat;             //Send data to UART buffer
  47   1      }
  48          
  49          /*----------------------------
  50          Send a string to UART
  51          Input: s (address of string)
  52          Output:None
  53          ----------------------------*/
C51 COMPILER V9.00   UART                                                                  05/21/2017 16:01:04 PAGE 2   

  54          void SendString(char *s)
  55          {
  56   1          while (*s)              //Check the end of the string
  57   1          {
  58   2              SendData(*s++);     //Send current char and increment string ptr
  59   2          }
  60   1      }
  61          
C51 COMPILER V9.00   UART                                                                  05/21/2017 16:01:04 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Uart_Isr (BEGIN)
                                           ; SOURCE LINE # 9
                                           ; SOURCE LINE # 11
0000 309805            JNB     RI,?C0001
                                           ; SOURCE LINE # 12
                                           ; SOURCE LINE # 13
0003 C298              CLR     RI
                                           ; SOURCE LINE # 14
0005 859900      R     MOV     RxData,SBUF
                                           ; SOURCE LINE # 16
0008         ?C0001:
                                           ; SOURCE LINE # 17
0008 309904            JNB     TI,?C0003
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
000B C299              CLR     TI
                                           ; SOURCE LINE # 20
000D C200        R     CLR     busy
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
000F         ?C0003:
000F 32                RETI    
             ; FUNCTION Uart_Isr (END)

             ; FUNCTION InitUart (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0000 759850            MOV     SCON,#050H
                                           ; SOURCE LINE # 29
0003 758920            MOV     TMOD,#020H
                                           ; SOURCE LINE # 30
0006 758BFD            MOV     TL1,#0FDH
0009 758DFD            MOV     TH1,#0FDH
                                           ; SOURCE LINE # 31
000C D28E              SETB    TR1
                                           ; SOURCE LINE # 32
000E D2AC              SETB    ES
                                           ; SOURCE LINE # 33
0010 D2AF              SETB    EA
                                           ; SOURCE LINE # 34
0012 22                RET     
             ; FUNCTION InitUart (END)

             ; FUNCTION _SendData (BEGIN)
                                           ; SOURCE LINE # 41
;---- Variable 'dat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 42
0000         ?C0005:
                                           ; SOURCE LINE # 43
0000 2000FD      R     JB      busy,?C0005
0003         ?C0006:
                                           ; SOURCE LINE # 45
0003 D200        R     SETB    busy
                                           ; SOURCE LINE # 46
0005 8F99              MOV     SBUF,R7
                                           ; SOURCE LINE # 47
0007 22                RET     
             ; FUNCTION _SendData (END)
C51 COMPILER V9.00   UART                                                                  05/21/2017 16:01:04 PAGE 4   


             ; FUNCTION _SendString (BEGIN)
                                           ; SOURCE LINE # 54
0000 8B00        R     MOV     s,R3
0002 8A00        R     MOV     s+01H,R2
0004 8900        R     MOV     s+02H,R1
                                           ; SOURCE LINE # 55
0006         ?C0008:
                                           ; SOURCE LINE # 56
0006 AB00        R     MOV     R3,s
0008 AA00        R     MOV     R2,s+01H
000A A900        R     MOV     R1,s+02H
000C 120000      E     LCALL   ?C?CLDPTR
000F 6013              JZ      ?C0010
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0011 0500        R     INC     s+02H
0013 E500        R     MOV     A,s+02H
0015 7002              JNZ     ?C0011
0017 0500        R     INC     s+01H
0019         ?C0011:
0019 14                DEC     A
001A F9                MOV     R1,A
001B 120000      E     LCALL   ?C?CLDPTR
001E FF                MOV     R7,A
001F 120000      R     LCALL   _SendData
                                           ; SOURCE LINE # 59
0022 80E2              SJMP    ?C0008
                                           ; SOURCE LINE # 60
0024         ?C0010:
0024 22                RET     
             ; FUNCTION _SendString (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     80    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
