C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd1602\lcd1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE PRINT
                    -(.\Listings\lcd1602.lst) TABS(2) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include"lcd1602.h"
   2          /*------------------------------------------------
   3          uS延时函数，含有输入参数 unsigned char t，无返回值
   4          unsigned char 是定义无符号字符变量，其值的范围是
   5          0~255 这里使用晶振12M，精确延时请使用汇编,大致延时
   6          长度如下 T=tx2+5 uS 
   7          ------------------------------------------------*/
   8          void DelayUs2x(unsigned char t)
   9          {   
  10   1          while(--t);
  11   1      }
  12          /*------------------------------------------------
  13          mS延时函数，含有输入参数 unsigned char t，无返回值
  14          unsigned char 是定义无符号字符变量，其值的范围是
  15          0~255 这里使用晶振12M，精确延时请使用汇编
  16          ------------------------------------------------*/
  17          void DelayMs(unsigned char t)
  18          {  
  19   1          while(t--)
  20   1          {
  21   2              //大致延时1mS
  22   2              DelayUs2x(245);
  23   2              DelayUs2x(245);
  24   2          }
  25   1      }
  26          /*------------------------------------------------
  27          判忙函数
  28          ------------------------------------------------*/
  29          bit LCD_Check_Busy(void) 
  30          { 
  31   1          DataPort= 0xFF; 
  32   1          RS_CLR; 
  33   1          RW_SET; 
  34   1          EN_CLR; 
  35   1          _nop_(); 
  36   1          EN_SET;
  37   1          return (bit)(DataPort & 0x80);
  38   1      }
  39          /*------------------------------------------------
  40          写入命令函数
  41          ------------------------------------------------*/
  42          void LCD_Write_Com(unsigned char com) 
  43          {  
  44   1          // while(LCD_Check_Busy()); //忙则等待
  45   1          DelayMs(5);
  46   1          RS_CLR; 
  47   1          RW_CLR; 
  48   1          EN_SET; 
  49   1          DataPort= com; 
  50   1          _nop_(); 
  51   1          EN_CLR;
  52   1      }
  53          /*------------------------------------------------
  54          写入数据函数
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 2   

  55          ------------------------------------------------*/
  56          void LCD_Write_Data(unsigned char Data) 
  57          { 
  58   1          //while(LCD_Check_Busy()); //忙则等待
  59   1          DelayMs(5);
  60   1          RS_SET; 
  61   1          RW_CLR; 
  62   1          EN_SET; 
  63   1          DataPort= Data; 
  64   1          _nop_();
  65   1          EN_CLR;
  66   1      }
  67          
  68          /*------------------------------------------------
  69          清屏函数
  70          ------------------------------------------------*/
  71          void LCD_Clear(void) 
  72          { 
  73   1          LCD_Write_Com(0x01); 
  74   1          DelayMs(5);
  75   1      }
  76          /*------------------------------------------------
  77          写入字符串函数
  78          ------------------------------------------------*/
  79          void LCD_Write_String(unsigned char x,unsigned char y,unsigned char *s) 
  80          {     
  81   1          if (y == 0) 
  82   1          {     
  83   2              LCD_Write_Com(0x80 + x);     //表示第一行
  84   2          }
  85   1          else 
  86   1          {      
  87   2              LCD_Write_Com(0xC0 + x);      //表示第二行
  88   2          }        
  89   1          while (*s) 
  90   1          {     
  91   2              LCD_Write_Data( *s);     
  92   2              s ++;     
  93   2          }
  94   1      }
  95          /*------------------------------------------------
  96          写入字符函数
  97          ------------------------------------------------*/
  98          void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data) 
  99          {     
 100   1          if (y == 0) 
 101   1          {     
 102   2              LCD_Write_Com(0x80 + x);     
 103   2          }    
 104   1          else 
 105   1          {     
 106   2              LCD_Write_Com(0xC0 + x);     
 107   2          }        
 108   1          LCD_Write_Data( Data);  
 109   1      }
 110          /*------------------------------------------------
 111          初始化函数
 112          ------------------------------------------------*/
 113          void LCD_Init(void) 
 114          {
 115   1          LCD_Write_Com(0x38);    /*显示模式设置*/ 
 116   1          DelayMs(5); 
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 3   

 117   1          LCD_Write_Com(0x38); 
 118   1          DelayMs(5); 
 119   1          LCD_Write_Com(0x38); 
 120   1          DelayMs(5); 
 121   1          LCD_Write_Com(0x38);  
 122   1          LCD_Write_Com(0x08);    /*显示关闭*/ 
 123   1          LCD_Write_Com(0x01);    /*显示清屏*/ 
 124   1          LCD_Write_Com(0x06);    /*显示光标移动设置*/ 
 125   1          DelayMs(5); 
 126   1          LCD_Write_Com(0x0C);    /*显示开及光标设置*/
 127   1      }
 128          
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _DelayUs2x (BEGIN)
                                           ; SOURCE LINE # 8
;---- Variable 't' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 9
0000         ?C0001:
                                           ; SOURCE LINE # 10
0000 DFFE              DJNZ    R7,?C0001
0002         ?C0002:
                                           ; SOURCE LINE # 11
0002         ?C0003:
0002 22                RET     
             ; FUNCTION _DelayUs2x (END)

             ; FUNCTION L?0022 (BEGIN)
0000         L?0023:
0000 7F38              MOV     R7,#038H
0002         L?0024:
0002 120000      R     LCALL   _LCD_Write_Com
0005 7F05              MOV     R7,#05H
             ; FUNCTION _DelayMs (BEGIN)
                                           ; SOURCE LINE # 17
;---- Variable 't' assigned to Register 'R6' ----
0007 AE07              MOV     R6,AR7
                                           ; SOURCE LINE # 18
0009         ?C0004:
                                           ; SOURCE LINE # 19
0009 AF06              MOV     R7,AR6
000B 1E                DEC     R6
000C EF                MOV     A,R7
000D 600C              JZ      ?C0006
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 22
000F 7FF5              MOV     R7,#0F5H
0011 120000      R     LCALL   _DelayUs2x
                                           ; SOURCE LINE # 23
0014 7FF5              MOV     R7,#0F5H
0016 120000      R     LCALL   _DelayUs2x
                                           ; SOURCE LINE # 24
0019 80EE              SJMP    ?C0004
                                           ; SOURCE LINE # 25
001B         ?C0006:
001B 22                RET     
             ; FUNCTION _DelayMs (END)

             ; FUNCTION LCD_Check_Busy (BEGIN)
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0000 7580FF            MOV     P0,#0FFH
                                           ; SOURCE LINE # 32
0003 C2A4              CLR     RS
                                           ; SOURCE LINE # 33
0005 D2A5              SETB    RW
                                           ; SOURCE LINE # 34
0007 C2A6              CLR     EN
                                           ; SOURCE LINE # 35
0009 00                NOP     
                                           ; SOURCE LINE # 36
000A D2A6              SETB    EN
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 5   

                                           ; SOURCE LINE # 37
000C E580              MOV     A,P0
000E 33                RLC     A
                                           ; SOURCE LINE # 38
000F         ?C0007:
000F 22                RET     
             ; FUNCTION LCD_Check_Busy (END)

             ; FUNCTION _LCD_Write_Com (BEGIN)
                                           ; SOURCE LINE # 42
;---- Variable 'com' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 45
0002 7F05              MOV     R7,#05H
0004 120000      R     LCALL   _DelayMs
                                           ; SOURCE LINE # 46
0007 C2A4              CLR     RS
                                           ; SOURCE LINE # 47
0009 C2A5              CLR     RW
                                           ; SOURCE LINE # 48
000B D2A6              SETB    EN
                                           ; SOURCE LINE # 49
000D 8D80              MOV     P0,R5
                                           ; SOURCE LINE # 50
000F 00                NOP     
                                           ; SOURCE LINE # 51
0010 C2A6              CLR     EN
                                           ; SOURCE LINE # 52
0012 22                RET     
             ; FUNCTION _LCD_Write_Com (END)

             ; FUNCTION _LCD_Write_Data (BEGIN)
                                           ; SOURCE LINE # 56
;---- Variable 'Data' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 59
0002 7F05              MOV     R7,#05H
0004 120000      R     LCALL   _DelayMs
                                           ; SOURCE LINE # 60
0007 D2A4              SETB    RS
                                           ; SOURCE LINE # 61
0009 C2A5              CLR     RW
                                           ; SOURCE LINE # 62
000B D2A6              SETB    EN
                                           ; SOURCE LINE # 63
000D 8D80              MOV     P0,R5
                                           ; SOURCE LINE # 64
000F 00                NOP     
                                           ; SOURCE LINE # 65
0010 C2A6              CLR     EN
                                           ; SOURCE LINE # 66
0012 22                RET     
             ; FUNCTION _LCD_Write_Data (END)

             ; FUNCTION LCD_Clear (BEGIN)
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
0000 7F01              MOV     R7,#01H
0002 120000      R     LCALL   _LCD_Write_Com
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 6   

                                           ; SOURCE LINE # 74
0005 7F05              MOV     R7,#05H
0007 020000      R     LJMP    _DelayMs
             ; FUNCTION LCD_Clear (END)

             ; FUNCTION _LCD_Write_String (BEGIN)
                                           ; SOURCE LINE # 79
;---- Variable 'x' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
;---- Variable 's' assigned to Register 'R1/R2/R3' ----
;---- Variable 'y' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
0002 ED                MOV     A,R5
0003 7005              JNZ     ?C0011
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
0005 EE                MOV     A,R6
0006 2480              ADD     A,#080H
                                           ; SOURCE LINE # 84
0008 8003              SJMP    ?C0020
000A         ?C0011:
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
000A EE                MOV     A,R6
000B 24C0              ADD     A,#0C0H
000D         ?C0020:
000D FF                MOV     R7,A
000E 120000      R     LCALL   _LCD_Write_Com
                                           ; SOURCE LINE # 88
0011         ?C0013:
                                           ; SOURCE LINE # 89
0011 120000      E     LCALL   ?C?CLDPTR
0014 FF                MOV     R7,A
0015 600C              JZ      ?C0015
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0017 120000      R     LCALL   _LCD_Write_Data
                                           ; SOURCE LINE # 92
001A 7401              MOV     A,#01H
001C 29                ADD     A,R1
001D F9                MOV     R1,A
001E E4                CLR     A
001F 3A                ADDC    A,R2
0020 FA                MOV     R2,A
                                           ; SOURCE LINE # 93
0021 80EE              SJMP    ?C0013
                                           ; SOURCE LINE # 94
0023         ?C0015:
0023 22                RET     
             ; FUNCTION _LCD_Write_String (END)

             ; FUNCTION _LCD_Write_Char (BEGIN)
                                           ; SOURCE LINE # 98
;---- Variable 'x' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
;---- Variable 'Data' assigned to Register 'R4' ----
0002 AC03              MOV     R4,AR3
;---- Variable 'y' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
0004 ED                MOV     A,R5
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 7   

0005 7005              JNZ     ?C0016
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0007 EE                MOV     A,R6
0008 2480              ADD     A,#080H
                                           ; SOURCE LINE # 103
000A 8003              SJMP    ?C0021
000C         ?C0016:
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
000C EE                MOV     A,R6
000D 24C0              ADD     A,#0C0H
000F         ?C0021:
000F FF                MOV     R7,A
0010 120000      R     LCALL   _LCD_Write_Com
                                           ; SOURCE LINE # 107
0013         ?C0017:
                                           ; SOURCE LINE # 108
0013 AF04              MOV     R7,AR4
0015 020000      R     LJMP    _LCD_Write_Data
             ; FUNCTION _LCD_Write_Char (END)

             ; FUNCTION LCD_Init (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
0000 120000      R     LCALL   L?0022
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
0003 120000      R     LCALL   L?0022
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0006 120000      R     LCALL   L?0023
                                           ; SOURCE LINE # 121
0009 7F38              MOV     R7,#038H
000B 120000      R     LCALL   _LCD_Write_Com
                                           ; SOURCE LINE # 122
000E 7F08              MOV     R7,#08H
0010 120000      R     LCALL   _LCD_Write_Com
                                           ; SOURCE LINE # 123
0013 7F01              MOV     R7,#01H
0015 120000      R     LCALL   _LCD_Write_Com
                                           ; SOURCE LINE # 124
0018 7F06              MOV     R7,#06H
                                           ; SOURCE LINE # 125
001A 120000      R     LCALL   L?0024
                                           ; SOURCE LINE # 126
001D 7F0C              MOV     R7,#0CH
001F 020000      R     LJMP    _LCD_Write_Com
             ; FUNCTION LCD_Init (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.00   LCD1602                                                               05/21/2017 16:01:04 PAGE 8   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
