C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE _main\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE PRINT(.\Li
                    -stings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #include<stdio.h>
   4          #include"../uart/uart.h"
   5          #include"../wire1/wire1.h"
   6          #include"../lcd1602/lcd1602.h"
   7          
   8          #define MAJORNUM  12
   9          #define MINORNUM  34
  10          
  11          
  12          sbit fire = P1^0;
  13          sbit human = P1^1;
  14          unsigned int temp_int;
  15          float temp_float;
  16          char temp_str[10];
  17          
  18          //待发送字节描述
  19          unsigned char sendData[11];
  20          /*************************
  21          sendData[0]       前导字节
  22          sendData[1]       主设备号MSB
  23          sendData[2]       主设备号LSB
  24          sendData[3]       次设备号MSB
  25          sendData[4]       次设备号LSB
  26          sendData[5]       火焰
  27          sendData[6]       人体
  28          sendData[7]       温度MSB
  29          sendData[8]       温度LSB
  30          sendData[9]       烟雾
  31          sendData[10]      检验和  
  32          *************************/
  33          
  34          void init_byte()
  35          {
  36   1        sendData[0]  =00;       //前导字节
  37   1        
  38   1        sendData[1]  =MAJORNUM;       //主设备号MSB
  39   1        sendData[2]  =MINORNUM;       //主设备号LSB
  40   1        
  41   1        sendData[3]  =00;       //次设备号MSB
  42   1        sendData[4]  =00;       //次设备号LSB
  43   1        
  44   1        sendData[5]  =00;       //火焰
  45   1        sendData[6]  =00;       //人体
  46   1        sendData[7]  =00;       //温度MSB
  47   1        sendData[8]  =00;       //温度LSB
  48   1        sendData[9]  =00;       //烟雾
  49   1        
  50   1        sendData[10] =sendData[1] | sendData[2];      //检验和
  51   1      }
  52          
  53          int main()
  54          {
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 2   

  55   1        int i;
  56   1        
  57   1        /*初始化LCD1602*/
  58   1        LCD_Init(); 
  59   1        LCD_Clear();//清屏
  60   1      
  61   1        InitUart();//初始化串口
  62   1        for(i=0;i<100;i++)
  63   1        Delay(200);
  64   1        SendString("Welcome to using Real-Time env info monitor !\n\n");
  65   1        
  66   1        init_byte();//初始化数据
  67   1        
  68   1        fire=1;
  69   1        human=1;
  70   1        
  71   1        
  72   1        
  73   1        while(1)
  74   1        {
  75   2          /*获取火焰数据，低电平触发火焰*/
  76   2          if(fire)
  77   2          {
  78   3            //SendString("No fire");
  79   3            sendData[5]=0x00;
  80   3            LCD_Write_String(0,0,"No fire,");
  81   3          }
  82   2          else
  83   2          {
  84   3            //SendString("get fire");
  85   3            sendData[5]=0x01;
  86   3            LCD_Write_String(0,0,"Getfire,");
  87   3          }
  88   2          //for(i=0;i<150;i++)
  89   2          //Delay(200);
  90   2          /*获取人体数据，高电平触发*/
  91   2          if(human)
  92   2          {
  93   3            //SendString("have human");
  94   3            sendData[6]=0x01;
  95   3            LCD_Write_String(8,0," Yhuman");
  96   3          }
  97   2          else
  98   2          {
  99   3            //SendString("no human");
 100   3            sendData[6]=0x00;
 101   3            LCD_Write_String(8,0," Nhuman");
 102   3          }
 103   2          //for(i=0;i<150;i++)
 104   2          //Delay(200);
 105   2          
 106   2          /*获取温度*/
 107   2          temp_int = wd();
 108   2          sendData[7]=(temp_int>>8);
 109   2          sendData[8]=temp_int;
 110   2          
 111   2          temp_float=(float)temp_int;
 112   2          temp_float=temp_float*0.0625;
 113   2          sprintf(temp_str, "%f", temp_float);
 114   2          //SendString(temp_str);
 115   2          
 116   2          //
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 3   

 117   2          LCD_Write_String(0,1,"T=");
 118   2          LCD_Write_String(2,1,temp_str);
 119   2          //for(i=0;i<150;i++)
 120   2          //Delay(200);
 121   2          
 122   2          //校验和
 123   2          sendData[10]=sendData[0] | sendData[1] | sendData[2] | sendData[3] | sendData[4] | sendData[5] | sendDat
             -a[6] | sendData[7] | sendData[8] | sendData[9];
 124   2          //发送数据
 125   2          //SendString(sendData);
 126   2          for(i=0;i<11;i++)
 127   2          SendData(sendData[i]);
 128   2          
 129   2          for(i=0;i<200;i++)
 130   2          Delay(200);
 131   2          LCD_Clear();//清屏
 132   2          
 133   2        }
 134   1        
 135   1        return 0;
 136   1      }
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION init_byte (BEGIN)
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0000 E4                CLR     A
0001 F500        R     MOV     sendData,A
                                           ; SOURCE LINE # 38
0003 75000C      R     MOV     sendData+01H,#0CH
                                           ; SOURCE LINE # 39
0006 750022      R     MOV     sendData+02H,#022H
                                           ; SOURCE LINE # 41
0009 F500        R     MOV     sendData+03H,A
                                           ; SOURCE LINE # 42
000B F500        R     MOV     sendData+04H,A
                                           ; SOURCE LINE # 44
000D F500        R     MOV     sendData+05H,A
                                           ; SOURCE LINE # 45
000F F500        R     MOV     sendData+06H,A
                                           ; SOURCE LINE # 46
0011 F500        R     MOV     sendData+07H,A
                                           ; SOURCE LINE # 47
0013 F500        R     MOV     sendData+08H,A
                                           ; SOURCE LINE # 48
0015 F500        R     MOV     sendData+09H,A
                                           ; SOURCE LINE # 50
0017 E500        R     MOV     A,sendData+01H
0019 4500        R     ORL     A,sendData+02H
001B F500        R     MOV     sendData+0AH,A
                                           ; SOURCE LINE # 51
001D 22                RET     
             ; FUNCTION init_byte (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 58
0000 120000      E     LCALL   LCD_Init
                                           ; SOURCE LINE # 59
0003 120000      E     LCALL   LCD_Clear
                                           ; SOURCE LINE # 61
0006 120000      E     LCALL   InitUart
                                           ; SOURCE LINE # 62
0009 E4                CLR     A
000A F500        R     MOV     i,A
000C F500        R     MOV     i+01H,A
000E         ?C0002:
                                           ; SOURCE LINE # 63
000E 7FC8              MOV     R7,#0C8H
0010 120000      E     LCALL   _Delay
0013 0500        R     INC     i+01H
0015 E500        R     MOV     A,i+01H
0017 7002              JNZ     ?C0018
0019 0500        R     INC     i
001B         ?C0018:
001B C3                CLR     C
001C 9464              SUBB    A,#064H
001E E500        R     MOV     A,i
0020 6480              XRL     A,#080H
0022 9480              SUBB    A,#080H
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 5   

0024 40E8              JC      ?C0002
0026         ?C0003:
                                           ; SOURCE LINE # 64
0026 7BFF              MOV     R3,#0FFH
0028 7A00        R     MOV     R2,#HIGH ?SC_0
002A 7900        R     MOV     R1,#LOW ?SC_0
002C 120000      E     LCALL   _SendString
                                           ; SOURCE LINE # 66
002F 120000      R     LCALL   init_byte
                                           ; SOURCE LINE # 68
0032 D290              SETB    fire
                                           ; SOURCE LINE # 69
0034 D291              SETB    human
0036         ?C0005:
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 76
0036 30900B            JNB     fire,?C0007
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 79
0039 E4                CLR     A
003A F500        R     MOV     sendData+05H,A
                                           ; SOURCE LINE # 80
003C 7BFF              MOV     R3,#0FFH
003E 7A00        R     MOV     R2,#HIGH ?SC_48
0040 7900        R     MOV     R1,#LOW ?SC_48
                                           ; SOURCE LINE # 81
0042 800A              SJMP    ?C0021
0044         ?C0007:
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 85
0044 750001      R     MOV     sendData+05H,#01H
                                           ; SOURCE LINE # 86
0047 7BFF              MOV     R3,#0FFH
0049 7A00        R     MOV     R2,#HIGH ?SC_57
004B 7900        R     MOV     R1,#LOW ?SC_57
004D E4                CLR     A
004E         ?C0021:
004E FD                MOV     R5,A
004F FF                MOV     R7,A
0050 120000      E     LCALL   _LCD_Write_String
                                           ; SOURCE LINE # 87
0053         ?C0008:
                                           ; SOURCE LINE # 91
0053 30910C            JNB     human,?C0009
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 94
0056 750001      R     MOV     sendData+06H,#01H
                                           ; SOURCE LINE # 95
0059 7BFF              MOV     R3,#0FFH
005B 7A00        R     MOV     R2,#HIGH ?SC_66
005D 7900        R     MOV     R1,#LOW ?SC_66
005F E4                CLR     A
                                           ; SOURCE LINE # 96
0060 8009              SJMP    ?C0022
0062         ?C0009:
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 100
0062 E4                CLR     A
0063 F500        R     MOV     sendData+06H,A
                                           ; SOURCE LINE # 101
0065 7BFF              MOV     R3,#0FFH
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 6   

0067 7A00        R     MOV     R2,#HIGH ?SC_74
0069 7900        R     MOV     R1,#LOW ?SC_74
006B         ?C0022:
006B FD                MOV     R5,A
006C 7F08              MOV     R7,#08H
006E 120000      E     LCALL   _LCD_Write_String
                                           ; SOURCE LINE # 102
0071         ?C0010:
                                           ; SOURCE LINE # 107
0071 120000      E     LCALL   wd
0074 8E00        R     MOV     temp_int,R6
0076 8F00        R     MOV     temp_int+01H,R7
                                           ; SOURCE LINE # 108
0078 E500        R     MOV     A,temp_int
007A F500        R     MOV     sendData+07H,A
                                           ; SOURCE LINE # 109
007C 850000      R     MOV     sendData+08H,temp_int+01H
                                           ; SOURCE LINE # 111
007F FC                MOV     R4,A
0080 AD00        R     MOV     R5,temp_int+01H
0082 E4                CLR     A
0083 120000      E     LCALL   ?C?FCASTI
0086 8F00        R     MOV     temp_float+03H,R7
0088 8E00        R     MOV     temp_float+02H,R6
008A 8D00        R     MOV     temp_float+01H,R5
008C 8C00        R     MOV     temp_float,R4
                                           ; SOURCE LINE # 112
008E E4                CLR     A
008F FB                MOV     R3,A
0090 FA                MOV     R2,A
0091 7980              MOV     R1,#080H
0093 783D              MOV     R0,#03DH
0095 120000      E     LCALL   ?C?FPMUL
0098 8F00        R     MOV     temp_float+03H,R7
009A 8E00        R     MOV     temp_float+02H,R6
009C 8D00        R     MOV     temp_float+01H,R5
009E 8C00        R     MOV     temp_float,R4
                                           ; SOURCE LINE # 113
00A0 7500FF      E     MOV     ?_sprintf?BYTE+03H,#0FFH
00A3 750000      R     MOV     ?_sprintf?BYTE+04H,#HIGH ?SC_82
00A6 750000      R     MOV     ?_sprintf?BYTE+05H,#LOW ?SC_82
00A9 8F00        E     MOV     ?_sprintf?BYTE+09H,R7
00AB 8E00        E     MOV     ?_sprintf?BYTE+08H,R6
00AD 8D00        E     MOV     ?_sprintf?BYTE+07H,R5
00AF 8C00        E     MOV     ?_sprintf?BYTE+06H,R4
00B1 7B00              MOV     R3,#00H
00B3 7A00        R     MOV     R2,#HIGH temp_str
00B5 7900        R     MOV     R1,#LOW temp_str
00B7 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 117
00BA 7BFF              MOV     R3,#0FFH
00BC 7A00        R     MOV     R2,#HIGH ?SC_85
00BE 7900        R     MOV     R1,#LOW ?SC_85
00C0 7D01              MOV     R5,#01H
00C2 E4                CLR     A
00C3 FF                MOV     R7,A
00C4 120000      E     LCALL   _LCD_Write_String
                                           ; SOURCE LINE # 118
00C7 7B00              MOV     R3,#00H
00C9 7A00        R     MOV     R2,#HIGH temp_str
00CB 7900        R     MOV     R1,#LOW temp_str
00CD 7D01              MOV     R5,#01H
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 7   

00CF 7F02              MOV     R7,#02H
00D1 120000      E     LCALL   _LCD_Write_String
                                           ; SOURCE LINE # 123
00D4 E500        R     MOV     A,sendData
00D6 4500        R     ORL     A,sendData+01H
00D8 4500        R     ORL     A,sendData+02H
00DA 4500        R     ORL     A,sendData+03H
00DC 4500        R     ORL     A,sendData+04H
00DE 4500        R     ORL     A,sendData+05H
00E0 4500        R     ORL     A,sendData+06H
00E2 4500        R     ORL     A,sendData+07H
00E4 4500        R     ORL     A,sendData+08H
00E6 4500        R     ORL     A,sendData+09H
00E8 F500        R     MOV     sendData+0AH,A
                                           ; SOURCE LINE # 126
00EA E4                CLR     A
00EB F500        R     MOV     i,A
00ED F500        R     MOV     i+01H,A
00EF         ?C0011:
                                           ; SOURCE LINE # 127
00EF 7400        R     MOV     A,#LOW sendData
00F1 2500        R     ADD     A,i+01H
00F3 F8                MOV     R0,A
00F4 E6                MOV     A,@R0
00F5 FF                MOV     R7,A
00F6 120000      E     LCALL   _SendData
00F9 0500        R     INC     i+01H
00FB E500        R     MOV     A,i+01H
00FD 7002              JNZ     ?C0019
00FF 0500        R     INC     i
0101         ?C0019:
0101 C3                CLR     C
0102 940B              SUBB    A,#0BH
0104 E500        R     MOV     A,i
0106 6480              XRL     A,#080H
0108 9480              SUBB    A,#080H
010A 40E3              JC      ?C0011
010C         ?C0012:
                                           ; SOURCE LINE # 129
010C E4                CLR     A
010D F500        R     MOV     i,A
010F F500        R     MOV     i+01H,A
0111         ?C0014:
                                           ; SOURCE LINE # 130
0111 7FC8              MOV     R7,#0C8H
0113 120000      E     LCALL   _Delay
0116 0500        R     INC     i+01H
0118 E500        R     MOV     A,i+01H
011A 7002              JNZ     ?C0020
011C 0500        R     INC     i
011E         ?C0020:
011E C3                CLR     C
011F 94C8              SUBB    A,#0C8H
0121 E500        R     MOV     A,i
0123 6480              XRL     A,#080H
0125 9480              SUBB    A,#080H
0127 40E8              JC      ?C0014
0129         ?C0015:
                                           ; SOURCE LINE # 131
0129 120000      E     LCALL   LCD_Clear
                                           ; SOURCE LINE # 133
012C 020000      R     LJMP    ?C0005
C51 COMPILER V9.00   MAIN                                                                  05/21/2017 16:01:04 PAGE 8   

             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    333    ----
   CONSTANT SIZE    =     88    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
