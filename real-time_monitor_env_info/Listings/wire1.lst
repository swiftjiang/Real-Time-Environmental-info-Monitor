C51 COMPILER V9.00   WIRE1                                                                 05/21/2017 16:01:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE WIRE1
OBJECT MODULE PLACED IN .\Objects\wire1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE wire1\wire1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE PRINT(.\L
                    -istings\wire1.lst) TABS(2) OBJECT(.\Objects\wire1.obj)

line level    source

   1          
   2          #include"wire1.h"
   3          
   4          
   5          void Delay4us() //延时4us
   6          {
   7   1        ;
   8   1      }
   9          void Delay(unsigned char j)   //一个循环15us
  10          {
  11   1        unsigned char i;
  12   1        while(j--)
  13   1        {
  14   2          i = 5;
  15   2          while (--i);
  16   2        }
  17   1      }
  18          bit d18b20_qs() //18b20 起始
  19          {
  20   1        bit dat;
  21   1        DQ = 1; //DQ复位
  22   1        Delay4us();
  23   1        DQ = 0; //拉低总线
  24   1        Delay(35);  //这里延时大概 525us
  25   1        DQ = 1; //拉高总线
  26   1        Delay(2);   //这里延时大概 30us
  27   1        dat = DQ; //读取返回值（0：有18b20存在 1：是没有）
  28   1        Delay(2);
  29   1        return dat; //返回数值
  30   1      }
  31          
  32          void d18b20_x(unsigned char dat) //写 8 位 数 据
  33          {
  34   1        unsigned char i;
  35   1        for(i=0;i<8;i++)  //8位计数器
  36   1        {
  37   2          DQ = 0; //拉低总线
  38   2          DQ = dat & 0x01;  //取最低位赋值给总线
  39   2          Delay(3); //延时45us
  40   2          DQ = 1; //拉过总线准备写下一个数据（或者总线复位）
  41   2          dat >>= 1;  //数据右移一位
  42   2        }
  43   1      }
  44          unsigned char d18b20_d()  //读 8 位 数 据
  45          {
  46   1        unsigned char i,dat=0;
  47   1        for(i=0;i<8;i++)  //8位计数器
  48   1        {
  49   2          DQ = 0; //拉低总线
  50   2          dat >>= 1;  //数据右移一位
  51   2          DQ = 1; //拉过总线（准备读取数据）
  52   2          if(DQ)  //判断是否是 1 如果是就把数据赋值给变量的高位
  53   2            dat |= 0x80;
  54   2          Delay(4);
C51 COMPILER V9.00   WIRE1                                                                 05/21/2017 16:01:05 PAGE 2   

  55   2        }
  56   1        return dat; //返回读取到数据数据
  57   1      }
  58          
  59          
  60          unsigned int wd() //读取温度函数
  61          {
  62   1        unsigned char i = 0;  //低8位数据
  63   1        unsigned char j = 0;  //高8位数据
  64   1        unsigned int k = 0; //无符号16整形用来存储读回来的 16位温度数据（j和i组合后的数据）
  65   1      
  66   1        d18b20_qs();  //初始化
  67   1        d18b20_x(0xCC); //跳过序列号的操作(因为18b20在总线上可以挂很多个，这个序列号和网卡MAC地址类似)
  68   1        d18b20_x(0x44); //开启温度转换
  69   1        Delay(200);     //开启温度转换需要时间这里延时一下
  70   1        
  71   1        d18b20_qs();  //初始化
  72   1        d18b20_x(0xCC); //跳过序列号的操作(因为18b20在总线上可以挂很多个，这个序列号和网卡MAC地址类似)
  73   1        d18b20_x(0xBE); //读取温度寄存器等（共可读9个寄存器） 前两个就是温度
  74   1        i = d18b20_d(); //读取低8位
  75   1        j = d18b20_d(); //读取高8位
  76   1      
  77   1        k = j;    
  78   1        k <<= 8;
  79   1        k = k |i;
  80   1        return k; //返回读取到的16位数据
  81   1      }
C51 COMPILER V9.00   WIRE1                                                                 05/21/2017 16:01:05 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Delay4us (BEGIN)
                                           ; SOURCE LINE # 5
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 8
0000 22                RET     
             ; FUNCTION Delay4us (END)

             ; FUNCTION _Delay (BEGIN)
                                           ; SOURCE LINE # 9
;---- Variable 'i' assigned to Register 'R6' ----
;---- Variable 'j' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 10
0000         ?C0002:
                                           ; SOURCE LINE # 12
0000 AD07              MOV     R5,AR7
0002 1F                DEC     R7
0003 ED                MOV     A,R5
0004 6008              JZ      ?C0006
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
0006 7E05              MOV     R6,#05H
0008         ?C0004:
                                           ; SOURCE LINE # 15
0008 1E                DEC     R6
0009 EE                MOV     A,R6
000A 60F4              JZ      ?C0002
000C 80FA              SJMP    ?C0004
                                           ; SOURCE LINE # 17
000E         ?C0006:
000E 22                RET     
             ; FUNCTION _Delay (END)

             ; FUNCTION d18b20_qs (BEGIN)
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 21
0000 D292              SETB    DQ
                                           ; SOURCE LINE # 22
0002 120000      R     LCALL   Delay4us
                                           ; SOURCE LINE # 23
0005 C292              CLR     DQ
                                           ; SOURCE LINE # 24
0007 7F23              MOV     R7,#023H
0009 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 25
000C D292              SETB    DQ
                                           ; SOURCE LINE # 26
000E 7F02              MOV     R7,#02H
0010 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 27
0013 A292              MOV     C,DQ
0015 9200        R     MOV     dat,C
                                           ; SOURCE LINE # 28
0017 7F02              MOV     R7,#02H
0019 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 29
001C A200        R     MOV     C,dat
                                           ; SOURCE LINE # 30
001E         ?C0007:
C51 COMPILER V9.00   WIRE1                                                                 05/21/2017 16:01:05 PAGE 4   

001E 22                RET     
             ; FUNCTION d18b20_qs (END)

             ; FUNCTION _d18b20_x (BEGIN)
                                           ; SOURCE LINE # 32
;---- Variable 'dat' assigned to Register 'R3' ----
0000 AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 35
;---- Variable 'i' assigned to Register 'R2' ----
0002 E4                CLR     A
0003 FA                MOV     R2,A
0004         ?C0008:
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0004 C292              CLR     DQ
                                           ; SOURCE LINE # 38
0006 EB                MOV     A,R3
0007 13                RRC     A
0008 9292              MOV     DQ,C
                                           ; SOURCE LINE # 39
000A 7F03              MOV     R7,#03H
000C 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 40
000F D292              SETB    DQ
                                           ; SOURCE LINE # 41
0011 EB                MOV     A,R3
0012 C3                CLR     C
0013 13                RRC     A
0014 FB                MOV     R3,A
                                           ; SOURCE LINE # 42
0015 0A                INC     R2
0016 BA08EB            CJNE    R2,#08H,?C0008
                                           ; SOURCE LINE # 43
0019         ?C0011:
0019 22                RET     
             ; FUNCTION _d18b20_x (END)

             ; FUNCTION d18b20_d (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
;---- Variable 'dat' assigned to Register 'R4' ----
0000 E4                CLR     A
0001 FC                MOV     R4,A
                                           ; SOURCE LINE # 47
;---- Variable 'i' assigned to Register 'R3' ----
0002 FB                MOV     R3,A
0003         ?C0012:
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
0003 C292              CLR     DQ
                                           ; SOURCE LINE # 50
0005 EC                MOV     A,R4
0006 C3                CLR     C
0007 13                RRC     A
0008 FC                MOV     R4,A
                                           ; SOURCE LINE # 51
0009 D292              SETB    DQ
                                           ; SOURCE LINE # 52
000B 309203            JNB     DQ,?C0015
                                           ; SOURCE LINE # 53
C51 COMPILER V9.00   WIRE1                                                                 05/21/2017 16:01:05 PAGE 5   

000E 430480            ORL     AR4,#080H
0011         ?C0015:
                                           ; SOURCE LINE # 54
0011 7F04              MOV     R7,#04H
0013 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 55
0016 0B                INC     R3
0017 BB08E9            CJNE    R3,#08H,?C0012
001A         ?C0013:
                                           ; SOURCE LINE # 56
001A AF04              MOV     R7,AR4
                                           ; SOURCE LINE # 57
001C         ?C0016:
001C 22                RET     
             ; FUNCTION d18b20_d (END)

             ; FUNCTION wd (BEGIN)
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
;---- Variable 'i' assigned to Register 'R2' ----
0000 E4                CLR     A
0001 FA                MOV     R2,A
                                           ; SOURCE LINE # 63
;---- Variable 'j' assigned to Register 'R7' ----
0002 FF                MOV     R7,A
                                           ; SOURCE LINE # 64
;---- Variable 'k' assigned to Register 'R4/R5' ----
0003 FD                MOV     R5,A
0004 FC                MOV     R4,A
                                           ; SOURCE LINE # 66
0005 120000      R     LCALL   d18b20_qs
                                           ; SOURCE LINE # 67
0008 7FCC              MOV     R7,#0CCH
000A 120000      R     LCALL   _d18b20_x
                                           ; SOURCE LINE # 68
000D 7F44              MOV     R7,#044H
000F 120000      R     LCALL   _d18b20_x
                                           ; SOURCE LINE # 69
0012 7FC8              MOV     R7,#0C8H
0014 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 71
0017 120000      R     LCALL   d18b20_qs
                                           ; SOURCE LINE # 72
001A 7FCC              MOV     R7,#0CCH
001C 120000      R     LCALL   _d18b20_x
                                           ; SOURCE LINE # 73
001F 7FBE              MOV     R7,#0BEH
0021 120000      R     LCALL   _d18b20_x
                                           ; SOURCE LINE # 74
0024 120000      R     LCALL   d18b20_d
0027 AA07              MOV     R2,AR7
                                           ; SOURCE LINE # 75
0029 120000      R     LCALL   d18b20_d
                                           ; SOURCE LINE # 77
002C AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 78
002E ED                MOV     A,R5
002F FC                MOV     R4,A
                                           ; SOURCE LINE # 79
0030 EA                MOV     A,R2
                                           ; SOURCE LINE # 80
C51 COMPILER V9.00   WIRE1                                                                 05/21/2017 16:01:05 PAGE 6   

0031 AE04              MOV     R6,AR4
0033 FF                MOV     R7,A
                                           ; SOURCE LINE # 81
0034         ?C0017:
0034 22                RET     
             ; FUNCTION wd (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    155    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
